@using Microsoft.AspNetCore.Identity
@using testProject.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<div class="navbar__auth">
    @if (SignInManager.IsSignedIn(User))
    {
        User user = (User)await UserManager.GetUserAsync(User);
        <div class="navbar__auth-authenticated">
            <p>hello @user.FirstName!</p>
            <img src="@user.Photo" />
        </div>
    }
    else
    {
        <div class="navbar__auth-anonimous">
            <a asp-area="Identity" asp-page="/Account/Login">Login</a>
            <a asp-area="Identity" asp-page="/Account/Register">Register</a>
        </div>
    }
    <form id="logOutForm" class="navbar__auth-logout-button" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button onclick="showLoggedOutToast()" type="button">Logout</button>
    </form>
    <script src="@Url.Content("~/js/Navbar.js")"></script>
</div>
